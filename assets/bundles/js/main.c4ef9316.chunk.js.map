{"version":3,"sources":["pages/Splash.js","secrets/Constants.js","components/AppBar/DefaultAppBar.js","components/home/Gallery.js","components/home/Diary.js","pages/Home.js","components/playLists/StyledSongComponents.js","components/playLists/Song.js","components/playLists/PlayList.js","components/playLists/AddListDialog.js","components/playLists/DeleteListDialog.js","stores/useStores.js","components/playLists/DeleteSongsDialog.js","components/playLists/TodaysList.js","components/playLists/AddSongDialog.js","pages/PlayListManager.js","components/calendar/MonthlyCalendar.js","components/calendar/DailyCalendar.js","pages/Calendar.js","pages/Friends.js","pages/Settings.js","pages/Login.js","pages/Logout.js","components/App.js","serviceWorker.js","stores/playListsStore.js","stores/UserProfileStore.js","index.js"],"names":["axios","defaults","withCredentials","SplashContainer","styled","div","SplashImage","img","Copyright","Splash","history","location","query","queryString","parse","search","useEffect","code","timer","setTimeout","push","clearTimeout","get","getServerUrl","params","then","response","data","console","log","status","onLoginSuccess","catch","error","src","alt","Container","Wrapper","Navigation","IconButton","Link","StyledIcon","Icon","color","isActive","style","filter","AppTitle","h1","AppTitleBossyPink","span","AppTitleBlueberryPancake","DefaultAppBar","url","to","GalleryIcon","FontAwesomeIcon","GalleryImage","Gallery","useState","curImageNo","setCurImageNo","handleClick","direction","icon","faChevronLeft","onClick","width","height","faChevronRight","StyledContainer","children","Date","p","Weather","position","top","leftAndRight","right","Paragraph","Data","Diary","dateDisplay","weatherPosition","weatherTop","weatherLeftAndRight","display","FloatingIcon","FloatingActionButton","props","Home","match","faPencilAlt","faPlus","StyledSong","SongProfileImage","SongTitle","SongArtist","useStyles","makeStyles","checkSongIcon","padding","fontSize","left","checkedSongIcon","addTodaySongIcon","removeIcon","paddingRight20","paddingRight45","addNewSongIcon","TodaySong","listId","songId","thumbnail_image_url","title","artist","removeFromTodaysList","classes","className","faMinus","Song","toggleCheckButton","checked","addToTodaysList","faCheck","classNames","SongAdd","targetListId","listHasSong","addSongToMyList","removeSongFromMyList","addSongIcon","deleteListIcon","listWrapper","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","marginBottom","PlayList","observer","id","songs","loadState","openAddSongDialog","checkedSongs","openDeleteListDialog","i","length","Songs","map","song","key","Box","boxShadow","ListTitle","faTrashAlt","SongList","container","boxSizing","margin","fontWeight","borderBottom","form","flexDirection","input","borderStyle","border","buttonGroup","justifyContent","button","minWidth","cancelButton","addButton","AddListDialog","open","onClose","inputRef","createRef","handleClose","handleCreateNewList","inputValue","current","value","Dialog","paper","onSubmit","e","preventDefault","name","ref","autoComplete","placeholder","Button","root","label","guideMessage","deleteButton","DeleteListDialog","useStores","React","useContext","MobXProviderContext","extra","DeleteSongsDialog","checkedCount","cancel","backgroundColor","borderTopRightRadius","borderTopLeftRadius","maxHeight","overflowY","overflowX","TodaysList","playLists","todaysList","header","songList","bottom","closeButton","pagination","marginTop","AddSongDialog","sendSearchQuery","searchResult","item","handleSearchRequest","Pagination","count","Math","ceil","page","offset","size","onChange","event","PlayListManager","loadDataFromServer","PlayLists","lists","list","ListContainer","addSongDialog","listTitle","closeAddSongDialog","addListDialogOpen","closeAddListDialog","deleteListDialog","closeDeleteListDialog","deleteSongsDialog","closeDeleteSongsDialog","openDeleteSongsDialog","openAddListDialog","leftArrowIcon","rightArrowIcon","editIcon","deleteIcon","checkedDate","selectedDate","diaryWrapper","CalendarContainer","CalendarWrapper","Year","Month","Days","DayName","DayBlock","DayNum","MonthlyCalendar","wrapper","thumbnailCard","prevCard","alignSelf","currentCard","nextCard","DailyCalendar","switchWrapper","marginLeft","calendarWrapper","AntSwitch","withStyles","theme","switchBase","transform","opacity","thumb","track","palette","grey","common","white","Switch","Calendar","checkedSwitch","state","setState","Typography","component","Grid","alignItems","spacing","target","Friends","profile","profileImage","float","profileDataWrapper","ageRange","logoutButton","Settings","userProfile","isReady","loadData","thumbnail_image","nickname","email","age_range","variant","Login","window","alert","Logout","App","exact","path","Boolean","hostname","PlayListsStore","listTd","getSongsFromList","a","limit","encodeURI","offsetStartIdx","next","indexOf","offsetEndIdx","offsetVariable","slice","parseInt","previous","results","j","updateSongInfoInList","requestData","concat","patch","removeSongInfoInList","splice","post","delete","elem","confirm","find","this","decorate","observable","action","UserProfileStore","gender","responseData","kakao_account","logout","property","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.c4ef9316.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport queryString from 'query-string';\r\nimport axios from \"axios\";\r\nimport {getServerUrl, getStaticUrl} from \"../secrets/Constants\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction onLoginSuccess (data, history) {\r\n    if(data.status === \"Error\") {\r\n        // 에러 처리(Access Code 못 얻음)\r\n    }\r\n    // redirect to home\r\n    const timer = setTimeout(() => {\r\n        history.push('/home');\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n}\r\n\r\nfunction Splash ({history, location}) {\r\n    const query = queryString.parse(location.search);\r\n\r\n    useEffect(() => {\r\n        if(query.code) {\r\n            const Url = getServerUrl() + 'oauth/';\r\n            const code = query.code;\r\n            axios.get(Url, {params: {code: code}})\r\n                .then((response) => {\r\n                    const data = response.data;\r\n                    console.log(response.data);\r\n                    return onLoginSuccess(data, history);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n        else {\r\n            // redirect to login\r\n            const timer = setTimeout(() => {\r\n                history.push('/login');\r\n            }, 2000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [history, query]);\r\n\r\n    return (\r\n        <SplashContainer>\r\n            <SplashImage src={`${getStaticUrl()}/splash2.gif`} alt=\"스플래시_로고\"/>\r\n            <Copyright>\r\n                &copy; 2019 nab5m, All rights reserved.\r\n            </Copyright>\r\n        </SplashContainer>\r\n    );\r\n}\r\n\r\nconst SplashContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    background-color: #f7fbfe;\r\n    font-family: 'Nanum Gothic', -apple-system, BlinkMacSystemFont, sans-serif;\r\n`;\r\n\r\nconst SplashImage = styled.img`\r\n    width: 100%;\r\n    max-width: 425px;\r\n    height: auto;\r\n`;\r\n\r\nconst Copyright = styled.div`\r\n    position: absolute;\r\n    bottom: 2em;\r\n    font-size: 14px;\r\n    color: #214368;\r\n    /* \r\n        #214368 blueberry pancake\r\n        #b51f5c Bossy Pink\r\n        #f7fbfe white powder\r\n    */\r\n`;\r\n\r\nexport default Splash;\r\n","const DEBUG = true;\r\n\r\nconst DEVELOP_SERVER_URL = \"http://localhost:8000/\";\r\nconst PRODUCTION_SERVER_URL = 'http://ec2-15-165-171-10.ap-northeast-2.compute.amazonaws.com:8000/';\r\n\r\nconst STATIC_URL = \"static/bundles\";\r\n\r\nfunction getServerUrl() {\r\n    return DEBUG ? DEVELOP_SERVER_URL : PRODUCTION_SERVER_URL;\r\n}\r\n\r\nfunction getStaticUrl() {\r\n    return getServerUrl() + STATIC_URL;\r\n}\r\n\r\nexport { getServerUrl };\r\nexport { getStaticUrl };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nimport {getStaticUrl} from \"../../secrets/Constants\";\r\n\r\nconst DefaultAppBar = ({url}) => {\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <AppTitle>\r\n                    <AppTitleBossyPink>노래</AppTitleBossyPink>\r\n                    <AppTitleBlueberryPancake> 일기</AppTitleBlueberryPancake>\r\n                </AppTitle>\r\n                <Navigation>\r\n                    <IconButton to=\"/home\">\r\n                        <Icon src={`${getStaticUrl()}/icons/HomeIcon2.svg`} alt=\"홈_아이콘\" color=\"pink\" isActive={url === \"/home\"}/>\r\n                    </IconButton>\r\n                    <IconButton to=\"/play-list-manager\">\r\n                        <Icon src={`${getStaticUrl()}/icons/PlayList4.svg`} alt=\"목록_아이콘\" color=\"blue\" isActive={url === \"/play-list-manager\"}/>\r\n                    </IconButton>\r\n                    <IconButton to=\"/calendar\">\r\n                        <Icon src={`${getStaticUrl()}/icons/calendar_today.svg`} alt=\"달력_아이콘\" color=\"pink\" isActive={url === \"/calendar\"}/>\r\n                    </IconButton>\r\n                    <IconButton to=\"/friends\">\r\n                        <Icon src={`${getStaticUrl()}/icons/FriendsIcon.svg`} alt=\"친구_아이콘\" color=\"blue\" isActive={url === \"/friends\"}/>\r\n                    </IconButton>\r\n                    <IconButton to=\"/settings\">\r\n                        <Icon src={`${getStaticUrl()}/icons/settings.svg`} alt=\"설정_아이콘\" color=\"pink\" isActive={url === \"/settings\"}/>\r\n                    </IconButton>\r\n                </Navigation>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    height: 93px;\r\n`;\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    width: 100vw;\r\n    background-color: white;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n    width: 97vw;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #c4c8cb;\r\n`;\r\n\r\nconst IconButton = styled(Link)`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst StyledIcon = styled.img`\r\n    width: 26px;\r\n    height: 26px;\r\n`;\r\n\r\nconst Icon = ({src, color, isActive}) => {\r\n    if(!isActive) {\r\n        color = \"invert(83%) sepia(4%) saturate(224%) hue-rotate(163deg) brightness(98%) contrast(89%)\";\r\n    }\r\n    else if(color === \"blue\") {\r\n        color = \"invert(21%) sepia(7%) saturate(7068%) hue-rotate(176deg) brightness(93%) contrast(85%)\";\r\n    }\r\n    else if(color === \"pink\") {\r\n        color = \"invert(24%) sepia(76%) saturate(2174%) hue-rotate(312deg) brightness(78%) contrast(100%)\";\r\n    }\r\n\r\n    return (\r\n        <StyledIcon src={src} style={{filter: color}} color={color} />\r\n    );\r\n};\r\n\r\nconst AppTitle = styled.h1`\r\n    padding-top: 8px;\r\n    padding-bottom: 18px;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n`;\r\nconst AppTitleBossyPink = styled.span`\r\n    color: #b51f5c;\r\n`;\r\nconst AppTitleBlueberryPancake = styled.span`\r\n    color: #214368;\r\n`;\r\n\r\nexport default DefaultAppBar;\r\n","import {faChevronLeft, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {getStaticUrl} from \"../../secrets/Constants\";\r\n\r\nconst Gallery = () => {\r\n    const [curImageNo, setCurImageNo] = useState(1);\r\n    const imageNum = 3;\r\n\r\n    const handleClick = (direction) => {\r\n        if (direction === \"left\") {\r\n            if(curImageNo === 1) { return; }\r\n            setCurImageNo(curImageNo-1);\r\n        }\r\n        else if (direction === \"right\") {\r\n            if(curImageNo === imageNum) { return; }\r\n            setCurImageNo(curImageNo+1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <GalleryIcon icon={faChevronLeft} onClick={() => { handleClick(\"left\") }} />\r\n            <GalleryImage src={`${getStaticUrl()}/Gallery${curImageNo}.jpg`} width=\"230\" height=\"auto\" alt=\"랜덤사진\" />\r\n            <GalleryIcon icon={faChevronRight} onClick={() => { handleClick(\"right\") }} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst GalleryIcon = styled(FontAwesomeIcon)`\r\n    color: #c4c8cb;\r\n    font-size: 18px;\r\n    padding: 5px 10px;\r\n`;\r\n\r\nconst GalleryImage = styled.img`\r\n    display: inline-block;\r\n`;\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Gallery from \"./Gallery\";\r\nimport {getStaticUrl} from \"../../secrets/Constants\";\r\n\r\nconst Diary = ({height=\"calc(100vh - 140px)\", dateDisplay = \"block\",\r\n                   weatherPosition, weatherTop, weatherLeftAndRight}) =>\r\n{\r\n    return (\r\n        <Container height={height}>\r\n            <Date style={{display: dateDisplay}}>2019년 11월 26일</Date>\r\n\r\n            <Weather position={weatherPosition} top={weatherTop} leftAndRight={weatherLeftAndRight}>\r\n                <img src={`${getStaticUrl()}/icons/sunny.gif`} alt=\"날씨\" width=\"45\" height=\"45\"/>\r\n            </Weather>\r\n\r\n            <Gallery />\r\n\r\n            <Paragraph>&nbsp;&nbsp;오늘은 코인 노래방에 가서 <Data>11분 38초</Data> 동안 <Data>3곡</Data>을 불렀다. <Data>발라드 1곡, 인디 1곡, 팝송 1곡</Data>을 부르고 당당하게 바깥 세상을 향해 걸어나왔다.</Paragraph>\r\n            <Paragraph>&nbsp;&nbsp;<Data>잘 부르고 싶은 노래</Data> 중에서 마크툽의 \"오늘도 빛나는 너에게\"를 부르고 <Data>OO이에게 불러 주고 싶은 노래</Data> 중에서 10cm의 \"폰서트\"를 연습했다. 하루 빨리 OO이에게 들려줘서 나의 목소리에 반해버리게 해야겠다.</Paragraph>\r\n            <Paragraph>&nbsp;&nbsp;오늘도 노래방을 다녀왔으니 발 뻗고 잠 잘 수 있겠다. 날이 좋아서, 날이 좋지 않아서 노래방과 함께한 모든 날이 좋았다. ㅎ_ㅎ</Paragraph>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n    position: relative;\r\n    //height: calc(100vh - 140px);\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n    padding: 0 10px;\r\n    font-size: 18px;\r\n    //font-family: 'Nanum Pen Script', cursive;\r\n    //font-family: 'Hi Melody', cursive;\r\n    //font-family: 'Gaegu', cursive;\r\n    font-family: 'Gamja Flower', cursive;\r\n`;\r\n\r\nconst Container = ({height, children}) => {\r\n    return (\r\n        <StyledContainer style={{height: height}}>\r\n            { children }\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst Date = styled.p`\r\n    font-size: 1.2em;\r\n    padding: 10px 5px;\r\n`;\r\n\r\nconst Weather = ({position=\"absolute\", top=\"5px\", leftAndRight={right: \"5px\"}, children}) => {\r\n    return (\r\n        <div style={{position: position, top: top, ...leftAndRight}}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Paragraph = styled.p`\r\n    padding: 10px 5px;\r\n`;\r\n\r\nconst Data = styled.span`\r\n    color: #214368;\r\n    color: #b51f5c;\r\n`;\r\n\r\nexport default Diary;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { DefaultAppBar } from \"../components/AppBar\";\r\nimport Diary from \"../components/home/Diary\";\r\n\r\nconst Home = ({match}) => {\r\n    return (\r\n        <Container>\r\n            <DefaultAppBar url={match.url} />\r\n\r\n            <Diary />\r\n\r\n            <FloatingActionButton>\r\n                <FloatingIcon icon={faPencilAlt} />\r\n            </FloatingActionButton>\r\n\r\n            <FloatingActionButton isActive>\r\n                <FloatingIcon icon={faPlus} />\r\n            </FloatingActionButton>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst FloatingIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    top: 14px;\r\n    left: 15px;\r\n    \r\n    font-size: 18px;\r\n`;\r\n\r\nconst FloatingActionButton = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin: 10px;\r\n\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 45px;\r\n    color: #f7fbfe;\r\n    background-color: #b51f5c;\r\n    \r\n    ${props => props.isActive && `\r\n        background-color: #214368;\r\n        right: 0;\r\n    `}\r\n`;\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst StyledSong = styled.div`\r\n    position: relative;\r\n    padding: 10px;\r\n`;\r\n\r\nconst SongProfileImage = styled.img`\r\n    border-radius: 40px;\r\n    width: 40px;\r\n    height: 40px;\r\n    float: left;\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst SongTitle = styled.div`\r\n    box-sizing: border-box;\r\n    height: 20px;\r\n    width: calc(100% - 50px);\r\n    \r\n    display: flex;\r\n    align-items: flex-end;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst SongArtist = styled.div`\r\n    box-sizing: border-box;\r\n    height: 20px;\r\n    width: calc(100% - 50px);\r\n    \r\n    font-size: 0.9em;\r\n    display: flex;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    color: #b5b8bb;\r\n`;\r\n\r\nconst FloatingIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    top: 14px;\r\n    left: 15px;\r\n\r\n    font-size: 18px;\r\n`;\r\n\r\nexport {StyledSong};\r\nexport {SongProfileImage};\r\nexport {SongTitle};\r\nexport {SongArtist};\r\n\r\nexport {FloatingIcon};\r\n","import {FloatingIcon, StyledSong, SongArtist, SongProfileImage, SongTitle} from \"./StyledSongComponents\";\r\nimport {faCheck, faMinus, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    checkSongIcon: {\r\n        padding: 5,\r\n        fontSize: '0.9em',\r\n        color: '#b5b8bb',\r\n        top: 18,\r\n        left: 'auto',\r\n        right: 28,\r\n    },\r\n    checkedSongIcon: {\r\n        color: '#b51f5c !important',\r\n    },\r\n    addTodaySongIcon: {\r\n        padding: 5,\r\n        fontSize: '0.9em',\r\n        color: '#214368',\r\n        top: 18,\r\n        left: 'auto',\r\n        right: 0,\r\n    },\r\n    removeIcon: {\r\n        padding: 5,\r\n        fontSize: '0.9em',\r\n        color: '#b51f5c',\r\n        top: 15,\r\n        left: 'auto',\r\n        right: 5,\r\n    },\r\n    paddingRight20: {\r\n        width: 'calc(100% - 50px - 20px)',\r\n    },\r\n    paddingRight45: {\r\n        width: 'calc(100% - 50px - 45px)',\r\n    },\r\n    addNewSongIcon: {\r\n        padding: 5,\r\n        fontSize: '0.9em',\r\n        color: '#214368',\r\n        top: 18,\r\n        left: 'auto',\r\n        right: 10,\r\n    },\r\n});\r\n\r\nconst TodaySong = ({listId, songId, thumbnail_image_url, title, artist, removeFromTodaysList}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <StyledSong>\r\n            <SongProfileImage src={thumbnail_image_url} alt=\"hello\" />\r\n            <SongTitle className={classes.paddingRight20}>{title}</SongTitle>\r\n            <SongArtist className={classes.paddingRight20}>{artist}</SongArtist>\r\n\r\n            <FloatingIcon\r\n                icon={faMinus}\r\n                onClick={() => {removeFromTodaysList(listId, songId)}}\r\n                className={classes.removeIcon} />\r\n        </StyledSong>\r\n    );\r\n};\r\n\r\nconst Song = ({listId, songId, thumbnail_image_url, title, artist,\r\n                  toggleCheckButton, checked, addToTodaysList}) =>\r\n{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <StyledSong>\r\n            <SongProfileImage src={thumbnail_image_url} alt=\"hello\"/>\r\n            <SongTitle className={classes.paddingRight45}>{title}</SongTitle>\r\n            <SongArtist className={classes.paddingRight45}>{artist}</SongArtist>\r\n\r\n            <FloatingIcon\r\n                icon={faCheck}\r\n                onClick={() => {\r\n                    toggleCheckButton(listId, songId)\r\n                }}\r\n                className={classNames(classes.checkSongIcon, checked ? classes.checkedSongIcon : '')}/>\r\n            <FloatingIcon\r\n                icon={faPlus}\r\n                onClick={() => {\r\n                    addToTodaysList(listId, songId)\r\n                }}\r\n                className={classes.addTodaySongIcon}/>\r\n        </StyledSong>\r\n    );\r\n};\r\n\r\nconst SongAdd = ({targetListId, songId, thumbnail_image_url, title, artist, listHasSong,\r\n                    addSongToMyList, removeSongFromMyList}) =>\r\n{\r\n    const classes = useStyles();\r\n\r\n    let icon = null;\r\n    if(listHasSong) {\r\n        icon = <FloatingIcon\r\n                    icon={faMinus}\r\n                    className={classes.addNewSongIcon}\r\n                    onClick={() => { removeSongFromMyList(targetListId, songId); } } />;\r\n    }\r\n    else {\r\n        icon = <FloatingIcon\r\n                    icon={faPlus}\r\n                    className={classes.addNewSongIcon}\r\n                    onClick={() => { addSongToMyList(targetListId, songId); } } />;\r\n    }\r\n\r\n    return (\r\n        <StyledSong>\r\n            <SongProfileImage src={thumbnail_image_url} alt=\"hello\"/>\r\n            <SongTitle className={classes.paddingRight20}>{title}</SongTitle>\r\n            <SongArtist className={classes.paddingRight20}>{artist}</SongArtist>\r\n\r\n            {icon}\r\n        </StyledSong>\r\n    );\r\n};\r\n\r\nexport { Song };\r\nexport { TodaySong };\r\nexport { SongAdd };\r\n","import React from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {observer} from \"mobx-react\";\r\nimport {FloatingIcon} from \"./StyledSongComponents\";\r\nimport { Song } from \"./Song\";\r\n\r\nconst useStyles = makeStyles({\r\n    addSongIcon: {\r\n        fontSize: '0.9em',\r\n        color: '#214368',\r\n        top: 8,\r\n        left: 'auto',\r\n        right: 28,\r\n    },\r\n    deleteListIcon: {\r\n        fontSize: '0.9em',\r\n        color: '#b51f5c',\r\n        top: 8,\r\n        left: 'auto',\r\n        right: 5,\r\n    },\r\n    listWrapper: {\r\n        borderRadius: 10,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        marginBottom: 15,\r\n    },\r\n});\r\n\r\nconst PlayList = observer(({id, title, songs, loadState, checkedSongs,\r\n                               openAddSongDialog, openDeleteListDialog, toggleCheckButton, addToTodaysList}) => {\r\n    const classes = useStyles();\r\n\r\n    /* ToDo: code review */\r\n    if(loadState === \"pending\") {\r\n        console.log(\"pending\");\r\n        return (<div> </div>);\r\n    }\r\n\r\n    /* ToDo: code review => should component update */\r\n    for(let i=0; i<songs.length; i++) {\r\n        if(!songs[i].id) {\r\n            console.log(\"pending\");\r\n            return (<div> </div>);\r\n        }\r\n    }\r\n    /* listId, songId, thumbnail_image_url, title, artist,\r\n                  toggleCheckButton, checked, addToTodaysList */\r\n    const Songs = songs.map(\r\n        song => {\r\n            return (\r\n                <Song key={song.id} listId={id} songId={song.id} thumbnail_image_url={song.thumbnail_image_url}\r\n                    title={song.title} artist={song.artist}\r\n                    toggleCheckButton={toggleCheckButton}\r\n                      checked={song.checked} addToTodaysList={addToTodaysList} />\r\n            );\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Box\r\n            className={classes.listWrapper}\r\n            boxShadow={3}\r\n        >\r\n            <ListTitle>\r\n                {title}\r\n\r\n                <FloatingIcon\r\n                    icon={faPlus}\r\n                    className={classes.addSongIcon}\r\n                    onClick={() => {openAddSongDialog(id, title);}}\r\n                />\r\n                <FloatingIcon\r\n                    icon={faTrashAlt}\r\n                    className={classes.deleteListIcon}\r\n                    onClick={() => {openDeleteListDialog(id, title);}}\r\n                />\r\n            </ListTitle>\r\n\r\n            <SongList>\r\n                { Songs }\r\n            </SongList>\r\n        </Box>\r\n    );\r\n});\r\n\r\nconst ListTitle = styled.div`\r\n    color: #b51f5c;\r\n    font-size: 1.1em;\r\n    position: relative;\r\n    padding: 5px 10px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid #b5b8bb;\r\n`;\r\n\r\nconst SongList = styled.div`\r\n`;\r\n\r\nexport default PlayList;\r\n","import React, {createRef} from 'react';\r\nimport {Dialog, makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        boxSizing: 'border-box',\r\n        width: '80vw',\r\n        padding: '10px',\r\n        margin: 0,\r\n    },\r\n    title: {\r\n        padding: '5px 10px',\r\n        fontSize: '18px',\r\n        fontWeight: 'normal',\r\n        borderBottom: '1px solid #b5b8bb',\r\n        color: '#b51f5c',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    input: {\r\n        margin: '10px 5px',\r\n        padding: '5px 10px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        border: '1px solid #b51f5c',\r\n    },\r\n    buttonGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        minWidth: '32px',\r\n        width: 'fit-content',\r\n    },\r\n    cancelButton: {\r\n        width: 'fit-content',\r\n        color: '#214368',\r\n    },\r\n    addButton: {\r\n        width: 'fit-content',\r\n        color: '#b51f5c',\r\n    },\r\n});\r\n\r\nconst AddListDialog = ({open, onClose}) => {\r\n    const classes = useStyles();\r\n    const inputRef = createRef();\r\n\r\n    const handleClose = () => {\r\n        onClose(false);\r\n    };\r\n    const handleCreateNewList = () => {\r\n        const inputValue = inputRef.current.value;\r\n        if(inputValue) {\r\n            onClose(inputValue)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose} classes={{paper: classes.container}}>\r\n            <h3 className={classes.title}>목록 추가</h3>\r\n            <form className={classes.form} onSubmit={(e) => {e.preventDefault(); handleCreateNewList();}}>\r\n                <input\r\n                    className={classes.input}\r\n                    id=\"new-list-title\"\r\n                    name=\"new-list-title\"\r\n                    ref={inputRef}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"새 목록 이름\" />\r\n\r\n                <div className={classes.buttonGroup}>\r\n                    <Button\r\n                        classes={{root: classes.button, label: classes.cancelButton}}\r\n                        onClick={handleClose}\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                    <Button\r\n                        classes={{root: classes.button, label: classes.addButton}}\r\n                        onClick={handleCreateNewList}\r\n                    >\r\n                        추가\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddListDialog;\r\n","import React from 'react';\r\nimport {Dialog, makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        boxSizing: 'border-box',\r\n        width: '80vw',\r\n        padding: '10px',\r\n        margin: 0,\r\n    },\r\n    title: {\r\n        padding: '5px 10px',\r\n        fontSize: '18px',\r\n        fontWeight: 'normal',\r\n        borderBottom: '1px solid #b5b8bb',\r\n        color: '#b51f5c',\r\n    },\r\n    guideMessage: {\r\n        padding: '5px 10px',\r\n    },\r\n    buttonGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        minWidth: '32px',\r\n        width: 'fit-content',\r\n    },\r\n    cancelButton: {\r\n        width: 'fit-content',\r\n        color: '#214368',\r\n    },\r\n    deleteButton: {\r\n        width: 'fit-content',\r\n        color: '#b51f5c',\r\n    },\r\n});\r\n\r\nconst DeleteListDialog = ({id, open, onClose, title}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = () => {\r\n        onClose(-1);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose} classes={{paper: classes.container}}>\r\n            <h3 className={classes.title}>{title}</h3>\r\n            <p className={classes.guideMessage}>정말 이 목록을 삭제할거야?</p>\r\n            <div className={classes.buttonGroup}>\r\n                <Button\r\n                    classes={{root: classes.button, label: classes.cancelButton}}\r\n                    onClick={handleClose}\r\n                >\r\n                    취소\r\n                </Button>\r\n                <Button\r\n                    classes={{root: classes.button, label: classes.deleteButton}}\r\n                    onClick={() => {onClose(id);}}\r\n                >\r\n                    삭제\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default DeleteListDialog;\r\n","import React from 'react';\r\nimport { MobXProviderContext } from \"mobx-react\";\r\n\r\nfunction useStores() {\r\n    return React.useContext(MobXProviderContext);\r\n}\r\n\r\nexport default useStores;\r\n","import React from 'react';\r\nimport {Dialog, makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        boxSizing: 'border-box',\r\n        width: '80vw',\r\n        padding: '10px',\r\n        margin: 0,\r\n    },\r\n    title: {\r\n        padding: '5px 10px',\r\n        fontSize: '18px',\r\n        fontWeight: 'normal',\r\n        borderBottom: '1px solid #b5b8bb',\r\n        color: '#b51f5c',\r\n    },\r\n    guideMessage: {\r\n        padding: '5px 10px',\r\n    },\r\n    buttonGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        minWidth: '32px',\r\n        width: 'fit-content',\r\n    },\r\n    cancelButton: {\r\n        width: 'fit-content',\r\n        color: '#214368',\r\n    },\r\n    deleteButton: {\r\n        width: 'fit-content',\r\n        color: '#b51f5c',\r\n    },\r\n    extra: {\r\n        color: '#214368',\r\n    },\r\n});\r\n\r\nconst DeleteSongsDialog = ({open, onClose, title, checkedCount}) => {\r\n    const classes = useStyles();\r\n\r\n    const cancel = () => {\r\n        onClose(false);\r\n    };\r\n    const confirm = () => {\r\n        onClose(true);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={cancel} classes={{paper: classes.container}}>\r\n            { checkedCount === 0 &&\r\n                <h3 className={classes.title}>선택된 곡이 없습니다!!</h3>\r\n            }\r\n            { checkedCount >= 1 &&\r\n                <h3 className={classes.title}>{title} <span className={classes.extra}> + {checkedCount - 1}곡</span></h3>\r\n            }\r\n            <p className={classes.guideMessage}>정말 이 노래 모두 삭제할거야?</p>\r\n            <div className={classes.buttonGroup}>\r\n                <Button\r\n                    classes={{root: classes.button, label: classes.cancelButton}}\r\n                    onClick={cancel}\r\n                >\r\n                    취소\r\n                </Button>\r\n                <Button\r\n                    classes={{root: classes.button, label: classes.deleteButton}}\r\n                    onClick={confirm}\r\n                >\r\n                    삭제\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default DeleteSongsDialog;\r\n","import React from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {observer} from \"mobx-react\";\r\nimport useStores from \"../../stores/useStores\";\r\nimport {TodaySong} from \"./Song\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginBottom: 15,\r\n        borderRadius: 10,\r\n    },\r\n    title: {\r\n        backgroundColor: '#b51f5c',\r\n        borderTopRightRadius: 10,\r\n        borderTopLeftRadius: 10,\r\n        padding: '5px 15px',\r\n        marginBottom: '10px',\r\n        fontSize: '1.2em',\r\n        fontWeight: 'normal',\r\n        color: '#f7fbfe',\r\n    },\r\n    listWrapper: {\r\n        maxHeight: '200px',\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden',\r\n        padding: '0 10px',\r\n        paddingBottom: 5,\r\n    },\r\n});\r\n\r\nconst TodaysList = observer(() => {\r\n    const classes = useStyles();\r\n    const {playLists} = useStores();\r\n    const list = playLists.todaysList;\r\n\r\n    /* listId, songId, thumbnail_image_url, title, artist, removeFromTodaysList */\r\n    /* key 중복 가능성? */\r\n    const Songs = list.map((song) => {\r\n        return (\r\n            <TodaySong key={song.songId} listId={song.listId} songId={song.songId}\r\n                thumbnail_image_url={song.thumbnail_image_url} title={song.title} artist={song.artist}\r\n                removeFromTodaysList={playLists.removeFromTodaysList} />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Box\r\n            className={classes.container}\r\n            boxShadow={3}\r\n        >\r\n            <h2 className={classes.title}>오늘 부른 노래</h2>\r\n            <div className={classes.listWrapper}>\r\n                {Songs}\r\n            </div>\r\n        </Box>\r\n    );\r\n});\r\n\r\nexport default TodaysList;\r\n","import React, {createRef} from 'react';\r\nimport {Dialog, makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {observer} from \"mobx-react\";\r\nimport {SongAdd} from \"./Song\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        position: 'relative',\r\n        boxSizing: 'border-box',\r\n        width: '90vw',\r\n        height: '80vh',\r\n        padding: '10px',\r\n        margin: 0,\r\n    },\r\n    header: {\r\n        borderBottom: '1px solid #b5b8bb',\r\n        padding: '5px 10px',\r\n        color: '#b5b8bb',\r\n    },\r\n    title: {\r\n        fontSize: '18px',\r\n        fontWeight: 'normal',\r\n        color: '#b51f5c',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    input: {\r\n        margin: '10px 5px',\r\n        padding: '5px 10px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        border: '1px solid #b51f5c',\r\n    },\r\n\r\n    songList: {\r\n        height: 'calc(80vh - 20px - 55px - 50px - 60px)',\r\n        overflowX: 'hidden',\r\n        overflowY: 'auto',\r\n    },\r\n\r\n    buttonGroup: {\r\n        position: 'absolute',\r\n        right: '5px',\r\n        bottom: '0',\r\n    },\r\n    button: {\r\n        minWidth: '32px',\r\n        width: 'fit-content',\r\n    },\r\n    closeButton: {\r\n        width: 'fit-content',\r\n        color: '#214368',\r\n    },\r\n    addButton: {\r\n        width: 'fit-content',\r\n        color: '#b51f5c',\r\n    },\r\n    pagination: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 5,\r\n    }\r\n});\r\n\r\nconst AddSongDialog = observer(\r\n    ({open, onClose, listId, title, sendSearchQuery, searchResult, listHasSong\r\n            , addSongToMyList, removeSongFromMyList}) => {\r\n    const classes = useStyles();\r\n    const inputRef = createRef();\r\n\r\n    const handleSearchRequest = () => {\r\n        const inputValue = inputRef.current.value;\r\n        if(inputValue) {\r\n            sendSearchQuery(inputValue);\r\n        }\r\n    };\r\n\r\n    const getPageRequest = (page) => {\r\n        sendSearchQuery(searchResult.input, (page-1)*10);\r\n    };\r\n\r\n    // ToDo: shouldUpdateComponent\r\n    const Songs = searchResult.songs.map((item) => {\r\n        return (\r\n            <SongAdd key={item.id} targetListId={listId} songId={item.id} title={item.title}\r\n                     thumbnail_image_url={item.thumbnail_image_url}\r\n                     artist={item.artist} listHasSong={listHasSong(listId, item.id)}\r\n                    addSongToMyList={addSongToMyList} removeSongFromMyList={removeSongFromMyList} />\r\n        );\r\n    });\r\n\r\n    console.log(Songs);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} classes={{paper: classes.container}}>\r\n            <div className={classes.header}>\r\n                <h3 className={classes.title}>{title}</h3>\r\n                노래 추가\r\n            </div>\r\n            <form className={classes.form} onSubmit={(e) => {e.preventDefault(); handleSearchRequest();}}>\r\n                <input\r\n                    className={classes.input}\r\n                    id=\"search-song\"\r\n                    name=\"search-song\"\r\n                    ref={inputRef}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"제목이나 가수 이름으로 검색\" />\r\n            </form>\r\n\r\n            <div className={classes.songList}>\r\n                { Songs }\r\n            </div>\r\n            <Pagination className={classes.pagination} count={Math.ceil(searchResult.count/10)}\r\n                        page={searchResult.offset/10 + 1} size=\"small\" onChange={(event, value) => {getPageRequest(value);}} />\r\n\r\n            <div className={classes.buttonGroup}>\r\n                <Button\r\n                    classes={{root: classes.button, label: classes.closeButton}}\r\n                    onClick={onClose}\r\n                >\r\n                    완료\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n});\r\n\r\nexport default AddSongDialog;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { DefaultAppBar } from \"../components/AppBar\";\r\nimport PlayList from \"../components/playLists/PlayList\";\r\nimport AddListDialog from \"../components/playLists/AddListDialog\";\r\nimport DeleteListDialog from \"../components/playLists/DeleteListDialog\";\r\nimport {observer} from \"mobx-react\";\r\nimport useStores from \"../stores/useStores\";\r\nimport DeleteSongsDialog from \"../components/playLists/DeleteSongsDialog\";\r\nimport TodaysList from \"../components/playLists/TodaysList\";\r\nimport {FloatingIcon} from \"../components/playLists/StyledSongComponents\";\r\nimport AddSongDialog from \"../components/playLists/AddSongDialog\";\r\n\r\nconst PlayListManager = observer(({match}) => {\r\n    const {playLists} = useStores();\r\n    if(playLists.loadState === \"before\") {\r\n        playLists.loadDataFromServer();\r\n    }\r\n\r\n    const PlayLists = playLists.lists.map(\r\n        list => (\r\n            <PlayList\r\n                key={list.id}\r\n                id={list.id}\r\n                title={list.title}\r\n                songs={list.songs}\r\n                loadState={playLists.loadState}\r\n                checkedSongs={playLists.checkedSongs}\r\n                openAddSongDialog={playLists.openAddSongDialog}\r\n                openDeleteListDialog={playLists.openDeleteListDialog}\r\n                toggleCheckButton={playLists.toggleCheckButton}\r\n                addToTodaysList={playLists.addToTodaysList}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <DefaultAppBar url={match.url} />\r\n\r\n            <ListContainer>\r\n                <TodaysList/>\r\n                {PlayLists}\r\n            </ListContainer>\r\n\r\n            <AddSongDialog listId={playLists.addSongDialog.listId} title={playLists.addSongDialog.listTitle}\r\n                           open={playLists.addSongDialog.open} onClose={playLists.closeAddSongDialog}\r\n                            sendSearchQuery={playLists.sendSearchQuery} searchResult={playLists.searchResult}\r\n                            listHasSong={playLists.listHasSong} addSongToMyList={playLists.addSongToMyList}\r\n                            removeSongFromMyList={playLists.removeSongFromMyList}/>\r\n\r\n            <AddListDialog open={playLists.addListDialogOpen} onClose={playLists.closeAddListDialog} />\r\n\r\n            <DeleteListDialog id={playLists.deleteListDialog.id} title={playLists.deleteListDialog.title}\r\n                              open={playLists.deleteListDialog.open} onClose={playLists.closeDeleteListDialog}/>\r\n\r\n            <DeleteSongsDialog title={playLists.deleteSongsDialog.title} checkedCount={playLists.deleteSongsDialog.checkedCount}\r\n                               open={playLists.deleteSongsDialog.open} onClose={playLists.closeDeleteSongsDialog} />\r\n\r\n            <FloatingActionButton onClick={playLists.openDeleteSongsDialog}>\r\n                <FloatingIcon icon={faTrashAlt} />\r\n            </FloatingActionButton>\r\n\r\n            <FloatingActionButton onClick={playLists.openAddListDialog} isActive>\r\n                <FloatingIcon icon={faPlus} />\r\n            </FloatingActionButton>\r\n        </Container>\r\n    );\r\n});\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n    height: calc(100vh - 160px);\r\n    overflow-y: scroll;\r\n    padding: 10px 20px;\r\n`;\r\n\r\nconst FloatingActionButton = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin: 10px;\r\n\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 45px;\r\n    color: #f7fbfe;\r\n    background-color: #b51f5c;\r\n\r\n    ${props => props.isActive && `\r\n        background-color: #214368;\r\n        right: 0;\r\n    `}\r\n`;\r\n\r\nexport default PlayListManager;\r\n","import React from 'react';\r\nimport Diary from \"../home/Diary\";\r\nimport styled from 'styled-components';\r\nimport {faPencilAlt, faChevronLeft, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles({\r\n    leftArrowIcon: {\r\n        top: '5px',\r\n        left: '0',\r\n        padding: '8px',\r\n        color: '#c4c8cb',\r\n        fontSize: '1em',\r\n    },\r\n    rightArrowIcon: {\r\n        top: '5px',\r\n        right: '0',\r\n        padding: '8px',\r\n        color: '#c4c8cb',\r\n        fontSize: '1em',\r\n    },\r\n    editIcon: {\r\n        right: '38px',\r\n        color: '#214368',\r\n    },\r\n    deleteIcon: {\r\n        right: '12px',\r\n        color: '#b51f5c',\r\n    },\r\n    checkedDate: {\r\n        border: '1px solid #b51f5c',\r\n        borderRadius: '21px',\r\n    },\r\n    selectedDate: {\r\n        border: '1px solid #b51f5c',\r\n        borderRadius: '21px',\r\n        backgroundColor: '#b51f5c',\r\n        color: 'white',\r\n    },\r\n    diaryWrapper: {\r\n        position: 'relative',\r\n        margin: '15px',\r\n        paddingTop: '5px',\r\n    },\r\n});\r\n\r\nconst MonthlyCalendar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container>\r\n            <CalendarContainer>\r\n                <CalendarWrapper>\r\n                    <Date>\r\n                        <FloatingIcon icon={faChevronLeft} className={classes.leftArrowIcon} />\r\n\r\n                        <Year>2019</Year>\r\n                        <Month>12</Month>\r\n\r\n                        <FloatingIcon icon={faChevronRight} className={classes.rightArrowIcon} />\r\n                    </Date>\r\n                    <Days>\r\n                        <DayName>월</DayName>\r\n                        <DayName>화</DayName>\r\n                        <DayName>수</DayName>\r\n                        <DayName>목</DayName>\r\n                        <DayName>금</DayName>\r\n                        <DayName>토</DayName>\r\n                        <DayName>일</DayName>\r\n\r\n                        <DayBlock><DayNum></DayNum></DayBlock>\r\n                        <DayBlock><DayNum>1</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>2</DayNum></DayBlock>\r\n                        <DayBlock><DayNum className={classes.selectedDate}>3</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>4</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>5</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>6</DayNum></DayBlock>\r\n\r\n                        <DayBlock><DayNum>7</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>8</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>9</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>10</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>11</DayNum></DayBlock>\r\n                        <DayBlock><DayNum className={classes.checkedDate}>12</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>13</DayNum></DayBlock>\r\n\r\n                        <DayBlock><DayNum>14</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>15</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>16</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>17</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>18</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>19</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>20</DayNum></DayBlock>\r\n\r\n                        <DayBlock><DayNum>21</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>22</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>23</DayNum></DayBlock>\r\n                        <DayBlock><DayNum className={classes.checkedDate}>24</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>25</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>26</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>27</DayNum></DayBlock>\r\n\r\n                        <DayBlock><DayNum className={classes.checkedDate}>28</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>29</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>30</DayNum></DayBlock>\r\n                        <DayBlock><DayNum>31</DayNum></DayBlock>\r\n                        <DayBlock><DayNum></DayNum></DayBlock>\r\n                        <DayBlock><DayNum></DayNum></DayBlock>\r\n                        <DayBlock><DayNum></DayNum></DayBlock>\r\n                    </Days>\r\n                </CalendarWrapper>\r\n            </CalendarContainer>\r\n\r\n            <Box\r\n                className={classes.diaryWrapper}\r\n                boxShadow={3}\r\n            >\r\n                <FloatingIcon icon={faPencilAlt} className={classes.editIcon} />\r\n                <FloatingIcon icon={faTrashAlt} className={classes.deleteIcon} />\r\n                <Diary height=\"auto\" dateDisplay=\"none\"\r\n                       weatherPosition=\"static\" weatherTop=\"10\" weatherLeftAndRight={{left: '0'}} />\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst CalendarContainer = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst CalendarWrapper = styled.div`\r\n    padding: 0 25px;\r\n`;\r\n\r\nconst Date = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 5px 0;\r\n`;\r\nconst Year = styled.span`\r\n    font-size: 1.5em;\r\n    baseline: bottom;\r\n    margin-right: 0.5em;\r\n`;\r\nconst Month = styled.span`\r\n    line-height: 2.2em;\r\n`;\r\n\r\nconst Days = styled.div`\r\n   \r\n`;\r\nconst DayName = styled.div`\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 14.27%;\r\n    margin-bottom: 5px;\r\n`;\r\nconst DayBlock = styled.div`\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 14.27%;\r\n    padding: 5px 0;\r\n`;\r\nconst DayNum = styled.span`\r\n    display: inline-flex;\r\n    width: 21px;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst FloatingIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    top: 10px;\r\n    \r\n    font-size: 18px;\r\n`;\r\n\r\nexport default MonthlyCalendar;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport {makeStyles, Box} from \"@material-ui/core\";\r\nimport Diary from \"../home/Diary\";\r\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    thumbnailCard: {\r\n        justifyContent: 'center',\r\n        width: 'auto',\r\n        paddingLeft: 12,\r\n        paddingRight: 12,\r\n        paddingTop: 6,\r\n        paddingBottom: 6,\r\n        margin: 8,\r\n    },\r\n    prevCard: {\r\n        display: 'flex',\r\n        alignSelf: 'flex-start',\r\n    },\r\n    currentCard: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        width: '85vw',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 12,\r\n        marginBottom: 12,\r\n    },\r\n    nextCard: {\r\n        display: 'flex',\r\n        alignSelf: 'flex-end',\r\n    },\r\n\r\n    editIcon: {\r\n        right: '28px',\r\n        color: '#214368',\r\n    },\r\n    deleteIcon: {\r\n        right: '5px',\r\n        color: '#b51f5c',\r\n    }\r\n});\r\n\r\nconst DailyCalendar = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classNames(classes.wrapper)}>\r\n            <Box\r\n                className={classNames(classes.thumbnailCard, classes.prevCard)}\r\n                boxShadow={3}\r\n            >\r\n                2019년<br/>\r\n                9월 21일\r\n            </Box>\r\n\r\n            <Box\r\n                className={classNames(classes.currentCard)}\r\n                boxShadow={3}\r\n            >\r\n                <FloatingIcon icon={faPencilAlt} className={classes.editIcon} />\r\n                <FloatingIcon icon={faTrashAlt} className={classes.deleteIcon} />\r\n                <Diary height=\"auto\" />\r\n            </Box>\r\n\r\n            <Box\r\n                className={classNames(classes.thumbnailCard, classes.nextCard)}\r\n                boxShadow={3}\r\n            >\r\n                아직 없어요<br/>\r\n                ㅠ_ㅠ\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FloatingIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    top: -28px;\r\n    \r\n    font-size: 18px;\r\n`;\r\n\r\nexport default DailyCalendar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DefaultAppBar } from \"../components/AppBar\";\r\nimport {makeStyles, Switch} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MonthlyCalendar from \"../components/calendar/MonthlyCalendar\";\r\nimport DailyCalendar from \"../components/calendar/DailyCalendar\";\r\n\r\nconst useStyles = makeStyles({\r\n    switchWrapper: {\r\n        marginTop: 2,\r\n        marginLeft: -15,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    calendarWrapper: {\r\n        height: 'calc(100vh - 125px)',\r\n        overflowY: 'scroll',\r\n    },\r\n});\r\n\r\nconst Calendar = ({match}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedSwitch: true,\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <DefaultAppBar url={match.url} />\r\n\r\n            <Typography component=\"div\">\r\n                <Grid component=\"label\" container className={classes.switchWrapper} alignItems=\"center\" spacing={1}>\r\n                    <Grid item>일간</Grid>\r\n                    <Grid item>\r\n                        <AntSwitch\r\n                            checked={state.checkedSwitch}\r\n                            onChange={handleChange('checkedSwitch')}\r\n                            value=\"checkedSwitch\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>월간</Grid>\r\n                </Grid>\r\n            </Typography>\r\n\r\n            <div className={classes.calendarWrapper}>\r\n                {state['checkedSwitch'] &&\r\n                    <MonthlyCalendar />\r\n                }\r\n                {!state['checkedSwitch'] &&\r\n                    <DailyCalendar />\r\n                }\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    font-family: 'Gamja Flower', cursive;  \r\n`;\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 36,\r\n        height: 20,\r\n        padding: 5,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: \"#214368\",\r\n        '&$checked': {\r\n            transform: 'translateX(15px)',\r\n            color: \"#214368\",\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: \"#7f9cc7\",\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        marginTop: 1,\r\n        width: 15,\r\n        height: 15,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { DefaultAppBar } from \"../components/AppBar\";\r\n\r\nconst Friends = ({match}) => {\r\n    return (\r\n        <Container>\r\n            <DefaultAppBar url={match.url} />\r\n\r\n            친구들\r\n\r\n            <FloatingActionButton>\r\n                <FloatingIcon icon={faPencilAlt} />\r\n            </FloatingActionButton>\r\n\r\n            <FloatingActionButton isActive>\r\n                <FloatingIcon icon={faPlus} />\r\n            </FloatingActionButton>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst FloatingIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    top: 14px;\r\n    left: 15px;\r\n    \r\n    font-size: 18px;\r\n`;\r\n\r\nconst FloatingActionButton = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin: 10px;\r\n\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 45px;\r\n    color: #f7fbfe;\r\n    background-color: #b51f5c;\r\n    \r\n    ${props => props.isActive && `\r\n        background-color: #214368;\r\n        right: 0;\r\n    `}\r\n`;\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { DefaultAppBar } from \"../components/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {observer} from \"mobx-react\";\r\nimport useStores from \"../stores/useStores\";\r\n\r\nconst useStyles = makeStyles({\r\n    profile: {\r\n        height: 75,\r\n        padding: 20,\r\n    },\r\n    profileImage: {\r\n        float: 'left',\r\n        width: 75,\r\n        height: 75,\r\n        borderRadius: 75,\r\n    },\r\n    profileDataWrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        height: 75,\r\n        paddingLeft: 20,\r\n        boxSizing: 'border-box',\r\n    },\r\n    ageRange: {\r\n    },\r\n    logoutButton: {\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\nconst Settings = observer(({match, history}) => {\r\n    const classes = useStyles();\r\n\r\n    const { userProfile } = useStores();\r\n\r\n    if(!userProfile.isReady) {\r\n        userProfile.loadData();\r\n    }\r\n\r\n    const Logout = () => {\r\n        history.push('/logout');\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <DefaultAppBar url={match.url} />\r\n            <div className={classes.profile}>\r\n                <img className={classes.profileImage} src={userProfile.data.thumbnail_image} alt=\"프로필사진\" />\r\n                <div className={classes.profileDataWrapper}>\r\n                    <div className={classes.nickname}>닉네임 : {userProfile.data.nickname}</div>\r\n                    <div className={classes.email}>이메일 : {userProfile.data.email}</div>\r\n                    {/* ToDo: 조건부 렌더링!! if null */}\r\n                    <div className={classes.ageRange}>연령대 : {userProfile.data.age_range}</div>\r\n                </div>\r\n            </div>\r\n            <Button className={classes.logoutButton} onClick={Logout} variant=\"outlined\">로그아웃</Button>\r\n\r\n            <FloatingActionButton>\r\n                <FloatingIcon icon={faPencilAlt} />\r\n            </FloatingActionButton>\r\n\r\n            <FloatingActionButton isActive>\r\n                <FloatingIcon icon={faPlus} />\r\n            </FloatingActionButton>\r\n        </Container>\r\n    );\r\n});\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst FloatingIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    top: 14px;\r\n    left: 15px;\r\n    \r\n    font-size: 18px;\r\n`;\r\n\r\nconst FloatingActionButton = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin: 10px;\r\n\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 45px;\r\n    color: #f7fbfe;\r\n    background-color: #b51f5c;\r\n    \r\n    ${props => props.isActive && `\r\n        background-color: #214368;\r\n        right: 0;\r\n    `}\r\n`;\r\n\r\nexport default Settings;\r\n","import React, {useEffect} from 'react';\r\nimport {getServerUrl} from \"../secrets/Constants\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n    useEffect(() => {\r\n         const Url = getServerUrl() + 'request-login-url';\r\n         axios.get(Url)\r\n             .then((response) => {\r\n                 const data = response.data;\r\n                 window.location = data['login_request_uri'];\r\n             })\r\n             .catch((error) => {\r\n                 alert('error');\r\n                 console.log(error);\r\n             });\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>로딩중...</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\n\r\nconst Logout = () => {\r\n    return (\r\n        <div>\r\n            <h3>로그아웃 되었습니다.</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logout;\r\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\n\nimport Splash from \"../pages/Splash\";\nimport Home from \"../pages/Home\";\nimport PlayListManager from \"../pages/PlayListManager\";\nimport Calendar from \"../pages/Calendar\";\nimport Friends from \"../pages/Friends\";\nimport Settings from \"../pages/Settings\";\nimport Login from \"../pages/Login\";\nimport Logout from \"../pages/Logout\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <Route exact path=\"/\" component={Splash} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/play-list-manager\" component={PlayListManager} />\n          <Route exact path=\"/calendar\" component={Calendar} />\n          <Route exact path=\"/friends\" component={Friends} />\n          <Route exact path=\"/settings\" component={Settings} />\n          <Route exact path=\"/logout\" component={Logout} />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {observable, action, decorate} from \"mobx\";\r\nimport {getServerUrl} from \"../secrets/Constants\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nclass PlayListsStore {\r\n    lists = [];\r\n    todaysList = [];\r\n    searchResult = {input: '', offset: 0, count: 0, songs: []};\r\n    // lists = [\r\n    //     {\r\n    //         listId: 0,\r\n    //         listTitle: \"O O 이에게 불러줄 노래\",\r\n    //         songs: [\r\n    //             {songId: 3051900, songTitle: \"AH YEAH(아예)\", songArtist: \"WINNER\", checked: true},\r\n    //             {songId: 3087858, songTitle: \"U GOT IT\", songArtist: \"갓츄 (GOT U)\", checked: false},\r\n    //             {songId: 137579, songTitle: \"기억을 걷는 시간\", songArtist: \"넬(NELL)\", checked: false},\r\n    //         ],\r\n    //     },\r\n    //     {\r\n    //         listId: 1,\r\n    //         listTitle: \"새 목록\",\r\n    //         songs: [\r\n    //         ],\r\n    //     },\r\n    //     {\r\n    //         listId: 2,\r\n    //         listTitle: \"겨울 테마곡\",\r\n    //         songs: [\r\n    //             {songId: 2930532, songTitle: \"누니와\", songArtist: \"머시다 흘러\", checked: false},\r\n    //             {songId: 41669, songTitle: \"거리에서\", songArtist: \"성시경\", checked: false},\r\n    //             {songId: 411459, songTitle: \"LET IT GO\", songArtist: \"겨울왕국\", checked: true},\r\n    //         ],\r\n    //     },\r\n    // ];\r\n\r\n    // todaysList = [\r\n    //     {listId: 0, songId: 2970028, title: \"시든 꽃에 물을 주듯\", artist: \"HYNN(박혜원)\"},\r\n    //     {listId: 0, songId: 3399860, title: \"Love Poem\", artist: \"아이유(IU)\"},\r\n    //     {listId: 2, songId: 406680, title: \"12월의 기적\", artist: \"EXO\"},\r\n    //     {listId: 2, songId: 184117, title: \"미리 메리 크리스마스\", artist: \"IU\"},\r\n    // ];\r\n    loadState = \"before\";\r\n    // before, pending, success, error\r\n\r\n    /* dialogs @observable */\r\n    addSongDialog = {listTd: -1, listTitle: '', open: false};\r\n    addListDialogOpen = false;\r\n    deleteListDialog = {id: -1, title: '', open: false};\r\n    deleteSongsDialog = {title: '', checkedCount: 0, open: false};\r\n\r\n    async loadDataFromServer() {\r\n        /*\r\n        ToDo: call Only one time\r\n         */\r\n\r\n        const url = getServerUrl() + 'api/v1/play-list';\r\n        const requestData = {};\r\n\r\n        if(this.loadState === \"success\") {\r\n            console.log(\"응 끝났어\");\r\n            return;\r\n        }\r\n\r\n        this.loadState = \"pending\";\r\n\r\n        await axios.get(url, {data: requestData})\r\n            .then((response) => {\r\n                this.lists = response.data.results;\r\n                const url = getServerUrl() + 'api/v1/song/';\r\n\r\n                for (let i=0; i < this.lists.length; i++) {\r\n                    const songs = this.lists[i].songs;\r\n\r\n                    /* 해당 list를 찾는 낭비 때문에 updateSongInfoInList()로 대체하지 않음 */\r\n                    for(let j=0; j < songs.length; j++) {\r\n                        axios.get(url + songs[j], {data: requestData})\r\n                            .then((response) => {\r\n                                this.lists[i].songs[j] = { ...response.data, checked: false };\r\n                            })\r\n                            .catch((error) => {\r\n                                console.log(error.response);\r\n                            });\r\n                    }\r\n                }\r\n\r\n                console.log(\"finished\");\r\n                this.loadState = \"success\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n            });\r\n    }\r\n\r\n    listHasSong = (listId, songId) => {\r\n        console.log(listId + ' ' + songId);\r\n\r\n        const songs = this.getSongsFromList(listId);\r\n        for(let i=0; i < songs.length; i++) {\r\n            if(songId === songs[i]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /* dialogs @action */\r\n    openAddSongDialog = (id, title) => {\r\n        this.addSongDialog.listId = id;\r\n        this.addSongDialog.listTitle = title;\r\n        this.addSongDialog.open = true;\r\n    };\r\n    sendSearchQuery = async (input, offset=0, limit=10) => {\r\n        const url = getServerUrl() + `api/v1/song/?search=${encodeURI(input)}&offset=${offset}&limit=${limit}`;\r\n\r\n        await axios.get(url)\r\n            .then((response) => {\r\n                // ToDo: 굳이 오프셋을 매번 문자열에서 읽어와? count도 매번 갱신해?\r\n                if(response.data['next']) {\r\n                    console.log('has next');\r\n\r\n                    const offsetStartIdx = response.data.next.indexOf(\"offset=\");\r\n                    const offsetEndIdx = response.data.next.indexOf(\"&\", offsetStartIdx);\r\n                    const offsetVariable = response.data.next.slice(offsetStartIdx + \"offset=\".length, offsetEndIdx);\r\n\r\n                    // calc current page offset\r\n                    this.searchResult.offset = parseInt(offsetVariable) - 10;\r\n                }\r\n                else if(response.data['previous']) {\r\n                    console.log('has previous');\r\n\r\n                    const offsetStartIdx = response.data.previous.indexOf(\"offset=\");\r\n                    const offsetEndIdx = response.data.previous.indexOf(\"&\", offsetStartIdx);\r\n                    const offsetVariable = response.data.previous.slice(offsetStartIdx + \"offset=\".length, offsetEndIdx);\r\n\r\n                    this.searchResult.offset = parseInt(offsetVariable) + 10;\r\n                }\r\n                else {\r\n                    console.log('no prev or next');\r\n                    this.searchResult.offset = 0;\r\n                }\r\n\r\n                this.searchResult.input = input;\r\n                this.searchResult.count = response.data.count;\r\n                this.searchResult.songs = response.data.results;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n            });\r\n    };\r\n    closeAddSongDialog = () => {\r\n        /* delete used data */\r\n        this.addSongDialog.listId = -1;\r\n        this.addSongDialog.listTitle = '';\r\n        this.addSongDialog.open = false;\r\n\r\n        this.searchResult.input = '';\r\n        this.searchResult.offset = 0;\r\n        this.searchResult.count = 0;\r\n        this.searchResult.songs = [];\r\n    };\r\n\r\n    getSongsFromList = (listId) => {\r\n        let songs = [];\r\n\r\n        for(let i=0; i < this.lists.length; i++) {\r\n            if(listId === this.lists[i].id) {\r\n                for(let j=0; j < this.lists[i].songs.length; j++) {\r\n                    songs.push(this.lists[i].songs[j].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        for(let i=0; i < this.todaysList.length; i++) {\r\n            if(listId === this.todaysList[i].listId) {\r\n                songs.push(this.todaysList[i].songId);\r\n            }\r\n        }\r\n\r\n        return songs;\r\n    };\r\n\r\n    updateSongInfoInList = async (listId, songId) => {\r\n        const url = getServerUrl() + 'api/v1/song/' + songId;\r\n\r\n        await axios.get(url)\r\n            .then((response) => {\r\n                for(let i=0; i < this.lists.length; i++) {\r\n                    if(listId === this.lists[i].id) {\r\n                        this.lists[i].songs.push({ ...response.data, checked: false });\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n            });\r\n    };\r\n    addSongToMyList = async (listId, songId) => {\r\n        const url = getServerUrl() + 'api/v1/play-list/' + listId + '/';\r\n        const requestData = { songs: this.getSongsFromList(listId).concat([songId]) };\r\n\r\n        await axios.patch(url, requestData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.updateSongInfoInList(listId, songId);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n            });\r\n    };\r\n\r\n    removeSongInfoInList = (listId, songId) => {\r\n        /* if song is in today's list */\r\n\r\n        for(let i=0; i < this.lists.length; i++) {\r\n            if(listId === this.lists[i].id) {\r\n                for(let j=0; j < this.lists[i].songs.length; j++) {\r\n                    if(songId === this.lists[i].songs[j].id) {\r\n                        this.lists[i].songs.splice(j, 1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n            리스트 안에서도 지웠는데 오늘 목록에서 삭제하는가?\r\n            오늘 목록에서 삭제하면 DB에서도 삭제하는가???\r\n        */\r\n        for(let i=0; i < this.todaysList.length; i++) {\r\n            if(listId === this.todaysList[i].listId && songId === this.todaysList[i].songId) {\r\n                this.todaysList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    removeSongFromMyList = async (listId, songId) => {\r\n        const url = getServerUrl() + 'api/v1/play-list/' + listId + '/';\r\n        const requestData = {\r\n            songs: this.getSongsFromList(listId).filter((item) => {\r\n                return item !== songId;\r\n            }),\r\n        };\r\n\r\n        await axios.patch(url, requestData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.removeSongInfoInList(listId, songId);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n            });\r\n    };\r\n\r\n    openAddListDialog = () => {\r\n        this.addListDialogOpen = true;\r\n    };\r\n    closeAddListDialog = (title) => {\r\n        if(title) {\r\n            const url = getServerUrl() + 'api/v1/play-list/';\r\n            const requestData = {title: title};\r\n\r\n            axios.post(url, {...requestData})\r\n                .then((response) => {\r\n                    this.lists.push({\r\n                        id: response.data.id,\r\n                        title: title,\r\n                        songs: [],\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                });\r\n        }\r\n        this.addListDialogOpen = false;\r\n    };\r\n    openDeleteListDialog = (id, title) => {\r\n        this.deleteListDialog.id = id;\r\n        this.deleteListDialog.title = title;\r\n        this.deleteListDialog.open = true;\r\n    };\r\n    closeDeleteListDialog = async (id) => {\r\n        if(id !== -1) { // clicked ok button\r\n            const url = getServerUrl() + 'api/v1/play-list/' + id + '/';\r\n\r\n            await axios.delete(url)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                });\r\n\r\n            this.lists = this.lists.filter((elem) => {\r\n                return elem.id !== id;\r\n            });\r\n        }\r\n        this.deleteListDialog.id = -1;\r\n        this.deleteListDialog.title = '';\r\n        this.deleteListDialog.open = false;\r\n    };\r\n\r\n    openDeleteSongsDialog = () => {\r\n        let count = 0;\r\n        for(let i=0; i<this.lists.length; i++) {\r\n            for(let j=0; j<this.lists[i].songs.length; j++) {\r\n                if(this.lists[i].songs[j].checked) {\r\n                    if(count === 0) {\r\n                        this.deleteSongsDialog.title = this.lists[i].songs[j].title;\r\n                    }\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        this.deleteSongsDialog.checkedCount = count;\r\n        this.deleteSongsDialog.open = true;\r\n    };\r\n    closeDeleteSongsDialog = (confirm) => {\r\n        if(confirm) {\r\n            for(let i=0; i<this.lists.length; i++) {\r\n                this.lists[i].songs = this.lists[i].songs.filter((elem) => {\r\n                    if(elem.checked) {\r\n                        this.removeSongFromMyList(this.lists[i].id, elem.id);\r\n                    }\r\n                    return !elem.checked;\r\n                });\r\n            }\r\n        }\r\n\r\n        // this.deleteSongsDialog.title = '';\r\n        // this.deleteSongsDialog.checkedCount = 0;\r\n        this.deleteSongsDialog.open = false;\r\n    };\r\n\r\n    toggleCheckButton = (listId, songId) => {\r\n        for(let i=0; i<this.lists.length; i++) {\r\n            if(this.lists[i].id === listId) {\r\n                for(let j=0; j<this.lists[i].songs.length; j++) {\r\n                    if(this.lists[i].songs[j].id === songId) {\r\n                        this.lists[i].songs[j].checked = !this.lists[i].songs[j].checked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    addToTodaysList = (listId, songId) => {\r\n        /*\r\n        ToDo: connect Server(Diary Table)\r\n         */\r\n\r\n        let song = {checked: false};\r\n        for(let i=0; i<this.lists.length; i++) {\r\n            if(this.lists[i].id === listId) {\r\n                song = this.lists[i].songs.find((item) => {\r\n                    return item.id === songId;\r\n                });\r\n                this.lists[i].songs = this.lists[i].songs.filter((item) => {\r\n                    return item.id !== songId;\r\n                });\r\n            }\r\n        }\r\n\r\n        song = {...song, songId: songId, listId: listId};\r\n        delete song.checked;\r\n\r\n        this.todaysList.push(song);\r\n    };\r\n    removeFromTodaysList = (listId, songId) => {\r\n        /*\r\n        ToDo: connect Server(Diary Table)\r\n         */\r\n\r\n        let song = this.todaysList.find((item) => {\r\n            return item.listId === listId && item.songId === songId;\r\n        });\r\n\r\n        // removeFromList\r\n        this.todaysList = this.todaysList.filter((item) => {\r\n            return item.listId !== listId || item.songId !== songId;\r\n        });\r\n\r\n        // addToInitialList\r\n        for(let i=0; i<this.lists.length; i++) {\r\n            if(this.lists[i].id === listId) {\r\n                this.lists[i].songs.push(song);\r\n            }\r\n        }\r\n        delete song.listId;\r\n        delete song.songId;\r\n        song.checked = false;\r\n    };\r\n}\r\ndecorate(PlayListsStore, {\r\n    lists: observable,\r\n    todaysList: observable,\r\n    searchResult: observable,\r\n    loadState: observable,\r\n\r\n    addSongDialog: observable,\r\n    addListDialogOpen: observable,\r\n    deleteListDialog: observable,\r\n    deleteSongsDialog: observable,\r\n\r\n    loadDataFromServer: action,\r\n\r\n    openAddSongDialog: action,\r\n    sendSearchQuery: action,\r\n    closeAddSongDialog: action,\r\n\r\n    updateSongInfoInList: action,\r\n    addSongToMyList: action,\r\n    removeSongInfoInList: action,\r\n    removeSongFromMyList: action,\r\n\r\n    openAddListDialog: action,\r\n    closeAddListDialog: action,\r\n    openDeleteListDialog: action,\r\n    closeDeleteListDialog: action,\r\n    openDeleteSongsDialog: action,\r\n    closeDeleteSongsDialog: action,\r\n\r\n    toggleCheckButton: action,\r\n\r\n    addToTodaysList: action,\r\n    removeFromTodaysList: action,\r\n});\r\n\r\nexport default PlayListsStore;\r\n","import {observable, action, decorate} from \"mobx\";\r\nimport axios from 'axios';\r\nimport {getServerUrl} from \"../secrets/Constants\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nclass UserProfileStore {\r\n    isReady = false;\r\n    data = {\r\n        nickname: null,\r\n        thumbnail_image: null,\r\n        email: null,\r\n        age_range: null,\r\n        gender: null,\r\n    };\r\n\r\n    loadData = () => {\r\n        const url = getServerUrl() + 'user/';\r\n        const requestData = {};\r\n\r\n        axios.get(url, {data: requestData})\r\n            .then((response) => {\r\n                const responseData = response.data.kakao_account;\r\n\r\n                if(!responseData['profile_needs_agreement']) {\r\n                    this.data['nickname'] = responseData['profile']['nickname'];\r\n                    this.data['thumbnail_image'] = responseData['profile']['thumbnail_image_url'];\r\n                }\r\n\r\n                if(responseData['has_email'] && !responseData['email_needs_agreement']) {\r\n                    this.data['email'] = responseData['email'];\r\n                }\r\n                if(responseData['has_age_range'] && !responseData['age_range_needs_agreement']) {\r\n                    this.data['age_range'] = responseData['age_range'];\r\n                }\r\n                if(responseData['has_gender'] && !responseData['gender_needs_agreement']) {\r\n                    this.data['gender'] = responseData['gender'];\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    logout = () => {\r\n        const url = getServerUrl() + 'logout/';\r\n        const requestData = {};\r\n\r\n        axios.get(url, {data: requestData})\r\n            .then((response) => {\r\n                for (const property in this.data) {\r\n                    console.log(response);\r\n                    this.data[property] = null;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n}\r\n\r\ndecorate(UserProfileStore, {\r\n    isReady: observable,\r\n    data: observable,\r\n\r\n    loadData: action,\r\n\r\n    logout: action,\r\n});\r\n\r\nexport default UserProfileStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"mobx-react\";\nimport PlayListsStore from \"./stores/playListsStore\";\nimport UserProfileStore from \"./stores/UserProfileStore\";\n\nconst playLists = new PlayListsStore();\nconst userProfile = new UserProfileStore();\n\nReactDOM.render(\n    <Provider playLists={playLists} userProfile={userProfile} >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}